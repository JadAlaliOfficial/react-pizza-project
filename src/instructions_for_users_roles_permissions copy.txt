1-Permissions Part:
###
1- API Get All Permissions https://auth.pnepizza.com/api/v1/permissions :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "data": {
        "current_page": 1,
        "data": [
            {
                "id": 1,
                "name": "manage users",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 1,
                            "role_id": 1
                        }
                    },
                    {
                        "id": 5,
                        "name": "dagsdfg",
                        "guard_name": "web",
                        "created_at": "2025-08-18T15:51:10.000000Z",
                        "updated_at": "2025-08-18T15:51:10.000000Z",
                        "pivot": {
                            "permission_id": 1,
                            "role_id": 5
                        }
                    }
                ]
            },
            {
                "id": 2,
                "name": "manage roles",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 2,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 3,
                "name": "manage permissions",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 3,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 4,
                "name": "manage service clients",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 4,
                            "role_id": 1
                        }
                    },
                    {
                        "id": 5,
                        "name": "dagsdfg",
                        "guard_name": "web",
                        "created_at": "2025-08-18T15:51:10.000000Z",
                        "updated_at": "2025-08-18T15:51:10.000000Z",
                        "pivot": {
                            "permission_id": 4,
                            "role_id": 5
                        }
                    }
                ]
            },
            {
                "id": 5,
                "name": "manage auth rules",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 5,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 7,
                "name": "export json data",
                "guard_name": "web",
                "created_at": "2025-08-15T10:36:10.000000Z",
                "updated_at": "2025-08-15T10:36:10.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 7,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 8,
                "name": "export data",
                "guard_name": "web",
                "created_at": "2025-08-17T11:07:59.000000Z",
                "updated_at": "2025-08-17T11:07:59.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 8,
                            "role_id": 1
                        }
                    },
                    {
                        "id": 3,
                        "name": "Editor",
                        "guard_name": "web",
                        "created_at": "2025-08-17T11:09:44.000000Z",
                        "updated_at": "2025-08-17T11:09:44.000000Z",
                        "pivot": {
                            "permission_id": 8,
                            "role_id": 3
                        }
                    }
                ]
            },
            {
                "id": 9,
                "name": "asdf",
                "guard_name": "web",
                "created_at": "2025-08-17T14:35:32.000000Z",
                "updated_at": "2025-08-17T14:35:32.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 9,
                            "role_id": 1
                        }
                    },
                    {
                        "id": 4,
                        "name": "asdf",
                        "guard_name": "web",
                        "created_at": "2025-08-17T14:41:45.000000Z",
                        "updated_at": "2025-08-17T14:41:45.000000Z",
                        "pivot": {
                            "permission_id": 9,
                            "role_id": 4
                        }
                    }
                ]
            },
            {
                "id": 10,
                "name": "asdfasd",
                "guard_name": "web",
                "created_at": "2025-08-18T15:51:27.000000Z",
                "updated_at": "2025-08-18T15:51:27.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 10,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 11,
                "name": "manage stores",
                "guard_name": "web",
                "created_at": "2025-08-19T11:15:37.000000Z",
                "updated_at": "2025-08-19T11:15:37.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 11,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 12,
                "name": "manage user role assignments",
                "guard_name": "web",
                "created_at": "2025-08-19T11:15:37.000000Z",
                "updated_at": "2025-08-19T11:15:37.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 12,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 13,
                "name": "manage role hierarchy",
                "guard_name": "web",
                "created_at": "2025-08-19T11:15:37.000000Z",
                "updated_at": "2025-08-19T11:15:37.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 13,
                            "role_id": 1
                        }
                    }
                ]
            }
        ],
        "first_page_url": "https://auth.pnepizza.com/api/v1/permissions?page=1",
        "from": 1,
        "last_page": 1,
        "last_page_url": "https://auth.pnepizza.com/api/v1/permissions?page=1",
        "links": [
            {
                "url": null,
                "label": "&laquo; Previous",
                "active": false
            },
            {
                "url": "https://auth.pnepizza.com/api/v1/permissions?page=1",
                "label": "1",
                "active": true
            },
            {
                "url": null,
                "label": "Next &raquo;",
                "active": false
            }
        ],
        "next_page_url": null,
        "path": "https://auth.pnepizza.com/api/v1/permissions",
        "per_page": 15,
        "prev_page_url": null,
        "to": 12,
        "total": 12
    }
}"

###
2- API Create Permission (POST) https://auth.pnepizza.com/api/v1/permissions:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "name": "test permission",
    "guard_name": "web"
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "Permission created successfully",
    "data": {
        "permission": {
            "guard_name": "web",
            "name": "test permission",
            "updated_at": "2025-08-26T12:58:39.000000Z",
            "created_at": "2025-08-26T12:58:39.000000Z",
            "id": 14
        }
    }
}"
the faild reslut could be :
-Validation Error (422):"
{
"message": "The given data was invalid.",
"errors": {
"name": ["The name field is required.", "The name has already been taken."]
}
}"

2-Roles Part:
####
1- API Get All Roles https://auth.pnepizza.com/api/v1/roles:
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "data": {
        "current_page": 1,
        "data": [
            {
                "id": 1,
                "name": "super-admin",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "permissions": [
                    {
                        "id": 1,
                        "name": "manage users",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 1
                        }
                    },
                    {
                        "id": 2,
                        "name": "manage roles",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 2
                        }
                    },
                    {
                        "id": 3,
                        "name": "manage permissions",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 3
                        }
                    },
                    {
                        "id": 4,
                        "name": "manage service clients",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 4
                        }
                    },
                    {
                        "id": 5,
                        "name": "manage auth rules",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 5
                        }
                    },
                    {
                        "id": 7,
                        "name": "export json data",
                        "guard_name": "web",
                        "created_at": "2025-08-15T10:36:10.000000Z",
                        "updated_at": "2025-08-15T10:36:10.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 7
                        }
                    },
                    {
                        "id": 8,
                        "name": "export data",
                        "guard_name": "web",
                        "created_at": "2025-08-17T11:07:59.000000Z",
                        "updated_at": "2025-08-17T11:07:59.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 8
                        }
                    },
                    {
                        "id": 9,
                        "name": "asdf",
                        "guard_name": "web",
                        "created_at": "2025-08-17T14:35:32.000000Z",
                        "updated_at": "2025-08-17T14:35:32.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 9
                        }
                    },
                    {
                        "id": 10,
                        "name": "asdfasd",
                        "guard_name": "web",
                        "created_at": "2025-08-18T15:51:27.000000Z",
                        "updated_at": "2025-08-18T15:51:27.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 10
                        }
                    },
                    {
                        "id": 11,
                        "name": "manage stores",
                        "guard_name": "web",
                        "created_at": "2025-08-19T11:15:37.000000Z",
                        "updated_at": "2025-08-19T11:15:37.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 11
                        }
                    },
                    {
                        "id": 12,
                        "name": "manage user role assignments",
                        "guard_name": "web",
                        "created_at": "2025-08-19T11:15:37.000000Z",
                        "updated_at": "2025-08-19T11:15:37.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 12
                        }
                    },
                    {
                        "id": 13,
                        "name": "manage role hierarchy",
                        "guard_name": "web",
                        "created_at": "2025-08-19T11:15:37.000000Z",
                        "updated_at": "2025-08-19T11:15:37.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 13
                        }
                    }
                ]
            },
            {
                "id": 3,
                "name": "Editor",
                "guard_name": "web",
                "created_at": "2025-08-17T11:09:44.000000Z",
                "updated_at": "2025-08-17T11:09:44.000000Z",
                "permissions": [
                    {
                        "id": 8,
                        "name": "export data",
                        "guard_name": "web",
                        "created_at": "2025-08-17T11:07:59.000000Z",
                        "updated_at": "2025-08-17T11:07:59.000000Z",
                        "pivot": {
                            "role_id": 3,
                            "permission_id": 8
                        }
                    }
                ]
            },
            {
                "id": 4,
                "name": "asdf",
                "guard_name": "web",
                "created_at": "2025-08-17T14:41:45.000000Z",
                "updated_at": "2025-08-17T14:41:45.000000Z",
                "permissions": [
                    {
                        "id": 9,
                        "name": "asdf",
                        "guard_name": "web",
                        "created_at": "2025-08-17T14:35:32.000000Z",
                        "updated_at": "2025-08-17T14:35:32.000000Z",
                        "pivot": {
                            "role_id": 4,
                            "permission_id": 9
                        }
                    }
                ]
            },
            {
                "id": 5,
                "name": "dagsdfg",
                "guard_name": "web",
                "created_at": "2025-08-18T15:51:10.000000Z",
                "updated_at": "2025-08-18T15:51:10.000000Z",
                "permissions": [
                    {
                        "id": 1,
                        "name": "manage users",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 5,
                            "permission_id": 1
                        }
                    },
                    {
                        "id": 4,
                        "name": "manage service clients",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 5,
                            "permission_id": 4
                        }
                    }
                ]
            }
        ],
        "first_page_url": "https://auth.pnepizza.com/api/v1/roles?page=1",
        "from": 1,
        "last_page": 1,
        "last_page_url": "https://auth.pnepizza.com/api/v1/roles?page=1",
        "links": [
            {
                "url": null,
                "label": "&laquo; Previous",
                "active": false
            },
            {
                "url": "https://auth.pnepizza.com/api/v1/roles?page=1",
                "label": "1",
                "active": true
            },
            {
                "url": null,
                "label": "Next &raquo;",
                "active": false
            }
        ],
        "next_page_url": null,
        "path": "https://auth.pnepizza.com/api/v1/roles",
        "per_page": 15,
        "prev_page_url": null,
        "to": 4,
        "total": 4
    }
}"

###
2- API Create Role (POST) https://auth.pnepizza.com/api/v1/roles:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "name": "test role",
    "guard_name": "web",
    "permissions": ["test permission"]
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "Role created successfully",
    "data": {
        "role": {
            "guard_name": "web",
            "name": "test role",
            "updated_at": "2025-08-26T12:59:40.000000Z",
            "created_at": "2025-08-26T12:59:40.000000Z",
            "id": 6,
            "permissions": [
                {
                    "id": 14,
                    "name": "test permission",
                    "guard_name": "web",
                    "created_at": "2025-08-26T12:58:39.000000Z",
                    "updated_at": "2025-08-26T12:58:39.000000Z",
                    "pivot": {
                        "role_id": 6,
                        "permission_id": 14
                    }
                }
            ]
        }
    }
}"
the faild reslut could be :
-Validation Error (422):"
{
"message": "The given data was invalid.",
"errors": {
"name": ["The name field is required.", "The name has already been taken."],
"permissions": ["The selected permissions.0 is invalid."]
}
}"

###
3- API Assign Permissions to Role (POST) https://auth.pnepizza.com/api/v1/roles/6/permissions/assign:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "permissions": ["asdf"]
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "Permissions assigned to role successfully",
    "data": {
        "role": {
            "id": 6,
            "name": "test role",
            "guard_name": "web",
            "created_at": "2025-08-26T12:59:40.000000Z",
            "updated_at": "2025-08-26T12:59:40.000000Z",
            "permissions": [
                {
                    "id": 9,
                    "name": "asdf",
                    "guard_name": "web",
                    "created_at": "2025-08-17T14:35:32.000000Z",
                    "updated_at": "2025-08-17T14:35:32.000000Z",
                    "pivot": {
                        "role_id": 6,
                        "permission_id": 9
                    }
                },
                {
                    "id": 14,
                    "name": "test permission",
                    "guard_name": "web",
                    "created_at": "2025-08-26T12:58:39.000000Z",
                    "updated_at": "2025-08-26T12:58:39.000000Z",
                    "pivot": {
                        "role_id": 6,
                        "permission_id": 14
                    }
                }
            ]
        }
    }
}"

3-Users Part:
###
1- API Get All Users https://auth.pnepizza.com/api/v1/users?per_page=10&search=&role= :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "data": {
        "current_page": 1,
        "data": [
            {
                "id": 1,
                "name": "Adler Morgan",
                "email": "adlermorgan12@gmail.com",
                "email_verified_at": "2025-08-12T16:35:55.000000Z",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 2,
                                "name": "manage roles"
                            },
                            {
                                "id": 3,
                                "name": "manage permissions"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            },
                            {
                                "id": 5,
                                "name": "manage auth rules"
                            },
                            {
                                "id": 7,
                                "name": "export json data"
                            },
                            {
                                "id": 8,
                                "name": "export data"
                            },
                            {
                                "id": 9,
                                "name": "asdf"
                            },
                            {
                                "id": 10,
                                "name": "asdfasd"
                            },
                            {
                                "id": 11,
                                "name": "manage stores"
                            },
                            {
                                "id": 12,
                                "name": "manage user role assignments"
                            },
                            {
                                "id": 13,
                                "name": "manage role hierarchy"
                            }
                        ]
                    }
                ],
                "permissions": [],
                "stores": []
            },
            {
                "id": 5,
                "name": "charlie",
                "email": "charliemiller1118@gmail.com",
                "email_verified_at": "2025-08-13T14:14:43.000000Z",
                "created_at": "2025-08-13T14:13:29.000000Z",
                "updated_at": "2025-08-13T14:14:43.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 2,
                                "name": "manage roles"
                            },
                            {
                                "id": 3,
                                "name": "manage permissions"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            },
                            {
                                "id": 5,
                                "name": "manage auth rules"
                            },
                            {
                                "id": 7,
                                "name": "export json data"
                            },
                            {
                                "id": 8,
                                "name": "export data"
                            },
                            {
                                "id": 9,
                                "name": "asdf"
                            },
                            {
                                "id": 10,
                                "name": "asdfasd"
                            },
                            {
                                "id": 11,
                                "name": "manage stores"
                            },
                            {
                                "id": 12,
                                "name": "manage user role assignments"
                            },
                            {
                                "id": 13,
                                "name": "manage role hierarchy"
                            }
                        ]
                    }
                ],
                "permissions": [],
                "stores": []
            },
            {
                "id": 6,
                "name": "george Warren",
                "email": "george.warren.pne@gmail.com",
                "email_verified_at": "2025-08-14T10:42:32.000000Z",
                "created_at": "2025-08-14T10:41:42.000000Z",
                "updated_at": "2025-08-14T10:42:32.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 2,
                                "name": "manage roles"
                            },
                            {
                                "id": 3,
                                "name": "manage permissions"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            },
                            {
                                "id": 5,
                                "name": "manage auth rules"
                            },
                            {
                                "id": 7,
                                "name": "export json data"
                            },
                            {
                                "id": 8,
                                "name": "export data"
                            },
                            {
                                "id": 9,
                                "name": "asdf"
                            },
                            {
                                "id": 10,
                                "name": "asdfasd"
                            },
                            {
                                "id": 11,
                                "name": "manage stores"
                            },
                            {
                                "id": 12,
                                "name": "manage user role assignments"
                            },
                            {
                                "id": 13,
                                "name": "manage role hierarchy"
                            }
                        ]
                    }
                ],
                "permissions": [],
                "stores": []
            },
            {
                "id": 7,
                "name": "Mari",
                "email": "shahdal0934@gmail.com",
                "email_verified_at": "2025-08-15T10:01:56.000000Z",
                "created_at": "2025-08-15T10:00:37.000000Z",
                "updated_at": "2025-08-15T10:01:56.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 2,
                                "name": "manage roles"
                            },
                            {
                                "id": 3,
                                "name": "manage permissions"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            },
                            {
                                "id": 5,
                                "name": "manage auth rules"
                            },
                            {
                                "id": 7,
                                "name": "export json data"
                            },
                            {
                                "id": 8,
                                "name": "export data"
                            },
                            {
                                "id": 9,
                                "name": "asdf"
                            },
                            {
                                "id": 10,
                                "name": "asdfasd"
                            },
                            {
                                "id": 11,
                                "name": "manage stores"
                            },
                            {
                                "id": 12,
                                "name": "manage user role assignments"
                            },
                            {
                                "id": 13,
                                "name": "manage role hierarchy"
                            }
                        ]
                    }
                ],
                "permissions": [],
                "stores": []
            },
            {
                "id": 11,
                "name": "asdf",
                "email": "asdf@asdf.asdf",
                "email_verified_at": "2025-08-17T12:57:09.000000Z",
                "created_at": "2025-08-17T12:57:09.000000Z",
                "updated_at": "2025-08-17T12:57:09.000000Z",
                "roles": [
                    {
                        "id": 3,
                        "name": "Editor",
                        "permissions": [
                            {
                                "id": 8,
                                "name": "export data"
                            }
                        ]
                    }
                ],
                "permissions": [
                    {
                        "id": 5,
                        "name": "manage auth rules"
                    }
                ],
                "stores": []
            },
            {
                "id": 12,
                "name": "sam",
                "email": "fefijeh749@baxidy.com",
                "email_verified_at": "2025-08-18T13:51:03.000000Z",
                "created_at": "2025-08-18T13:50:36.000000Z",
                "updated_at": "2025-08-18T13:52:19.000000Z",
                "roles": [
                    {
                        "id": 5,
                        "name": "dagsdfg",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            }
                        ]
                    }
                ],
                "permissions": [],
                "stores": []
            },
            {
                "id": 15,
                "name": "asdf",
                "email": "as@as.as",
                "email_verified_at": "2025-08-22T11:40:15.000000Z",
                "created_at": "2025-08-22T11:40:15.000000Z",
                "updated_at": "2025-08-22T11:40:15.000000Z",
                "roles": [
                    {
                        "id": 5,
                        "name": "dagsdfg",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            }
                        ]
                    }
                ],
                "permissions": [
                    {
                        "id": 2,
                        "name": "manage roles"
                    }
                ],
                "stores": [
                    {
                        "store": {
                            "id": "STORE_002",
                            "name": "New Store Location"
                        },
                        "roles": [
                            {
                                "id": 4,
                                "name": "asdf",
                                "permissions": [
                                    {
                                        "id": 9,
                                        "name": "asdf"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "store": {
                            "id": "STORE_004",
                            "name": "Updated Store Name"
                        },
                        "roles": [
                            {
                                "id": 4,
                                "name": "asdf",
                                "permissions": [
                                    {
                                        "id": 9,
                                        "name": "asdf"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "id": 16,
                "name": "sssssss",
                "email": "kinaleh622@ahanim.com",
                "email_verified_at": null,
                "created_at": "2025-08-25T16:11:52.000000Z",
                "updated_at": "2025-08-25T16:11:52.000000Z",
                "roles": [],
                "permissions": [],
                "stores": []
            },
            {
                "id": 17,
                "name": "qqqq",
                "email": "kinaleh62@ahanim.com",
                "email_verified_at": null,
                "created_at": "2025-08-25T16:41:25.000000Z",
                "updated_at": "2025-08-25T16:41:25.000000Z",
                "roles": [],
                "permissions": [],
                "stores": []
            },
            {
                "id": 18,
                "name": "pppp",
                "email": "ucnj4om4sz@wyoxafp.com",
                "email_verified_at": "2025-08-25T16:57:04.000000Z",
                "created_at": "2025-08-25T16:50:04.000000Z",
                "updated_at": "2025-08-25T17:26:33.000000Z",
                "roles": [],
                "permissions": [],
                "stores": []
            }
        ],
        "first_page_url": "https://auth.pnepizza.com/api/v1/users?page=1",
        "from": 1,
        "last_page": 1,
        "last_page_url": "https://auth.pnepizza.com/api/v1/users?page=1",
        "links": [
            {
                "url": null,
                "label": "&laquo; Previous",
                "active": false
            },
            {
                "url": "https://auth.pnepizza.com/api/v1/users?page=1",
                "label": "1",
                "active": true
            },
            {
                "url": null,
                "label": "Next &raquo;",
                "active": false
            }
        ],
        "next_page_url": null,
        "path": "https://auth.pnepizza.com/api/v1/users",
        "per_page": 10,
        "prev_page_url": null,
        "to": 10,
        "total": 10
    }
}"
the faild reslut could be :
-Permission Denied (403):"
{
"message": "This action is unauthorized."
}"

###
2- API Create User (POST) https://auth.pnepizza.com/api/v1/users :
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "name": "test",
    "email": "test@test.com",
    "password": "password123",
    "password_confirmation": "password123",
    "roles": ["test role"],
    "permissions": []
}", 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "User created successfully",
    "data": {
        "user": {
            "name": "test",
            "email": "test@test.com",
            "email_verified_at": "2025-08-26T13:03:25.000000Z",
            "updated_at": "2025-08-26T13:03:25.000000Z",
            "created_at": "2025-08-26T13:03:25.000000Z",
            "id": 19,
            "roles": [
                {
                    "id": 6,
                    "name": "test role",
                    "guard_name": "web",
                    "created_at": "2025-08-26T12:59:40.000000Z",
                    "updated_at": "2025-08-26T12:59:40.000000Z",
                    "pivot": {
                        "model_type": "App\\Models\\User",
                        "model_id": 19,
                        "role_id": 6
                    },
                    "permissions": [
                        {
                            "id": 9,
                            "name": "asdf",
                            "guard_name": "web",
                            "created_at": "2025-08-17T14:35:32.000000Z",
                            "updated_at": "2025-08-17T14:35:32.000000Z",
                            "pivot": {
                                "role_id": 6,
                                "permission_id": 9
                            }
                        },
                        {
                            "id": 14,
                            "name": "test permission",
                            "guard_name": "web",
                            "created_at": "2025-08-26T12:58:39.000000Z",
                            "updated_at": "2025-08-26T12:58:39.000000Z",
                            "pivot": {
                                "role_id": 6,
                                "permission_id": 14
                            }
                        }
                    ]
                }
            ],
            "permissions": []
        }
    }
}"
the faild reslut could be :
-Validation Error (422):"
{
"message": "The given data was invalid.",
"errors": {
"name": ["The name field is required."],
"email": ["The email has already been taken."],
"password": ["The password must be at least 8 characters."],
"roles": ["The selected roles.0 is invalid."],
"permissions": ["The selected permissions.1 is invalid."]
}
}"
-Creation Failed (400):"
{
"success": false,
"message": "Failed to create user",
"error": "Role assignment failed"
}"


###
3- API Get User by ID https://auth.pnepizza.com/api/v1/users/15 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "data": {
        "user": {
            "id": 15,
            "name": "asdf",
            "email": "as@as.as",
            "email_verified_at": "2025-08-22T11:40:15.000000Z",
            "created_at": "2025-08-22T11:40:15.000000Z",
            "updated_at": "2025-08-22T11:40:15.000000Z",
            "roles": [
                {
                    "id": 5,
                    "name": "dagsdfg",
                    "permissions": [
                        {
                            "id": 1,
                            "name": "manage users"
                        },
                        {
                            "id": 4,
                            "name": "manage service clients"
                        }
                    ]
                }
            ],
            "permissions": [
                {
                    "id": 2,
                    "name": "manage roles"
                }
            ],
            "stores": [
                {
                    "store": {
                        "id": "STORE_002",
                        "name": "New Store Location"
                    },
                    "roles": [
                        {
                            "id": 4,
                            "name": "asdf",
                            "permissions": [
                                {
                                    "id": 9,
                                    "name": "asdf"
                                }
                            ]
                        }
                    ]
                },
                {
                    "store": {
                        "id": "STORE_004",
                        "name": "Updated Store Name"
                    },
                    "roles": [
                        {
                            "id": 4,
                            "name": "asdf",
                            "permissions": [
                                {
                                    "id": 9,
                                    "name": "asdf"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }
}"
the faild reslut could be :
-User Not Found (404):"
{
"message": "No query results for model [App\\Models\\User] 999"
}"

###
4- API Update User (PUT) https://auth.pnepizza.com/api/v1/users/19:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "name": "test updated",
    "roles": [],
    "permissions": []
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "User updated successfully",
    "data": {
        "user": {
            "id": 19,
            "name": "test updated",
            "email": "test@test.com",
            "email_verified_at": "2025-08-26T13:03:25.000000Z",
            "created_at": "2025-08-26T13:03:25.000000Z",
            "updated_at": "2025-08-26T13:05:38.000000Z",
            "roles": [],
            "permissions": []
        }
    }
}"
the faild reslut could be :
-Validation Error (422):"
{
"message": "The given data was invalid.",
"errors": {
"name": ["The name field is required."],
"email": ["The email has already been taken."],
"password": ["The password must be at least 8 characters."],
"roles": ["The selected roles.0 is invalid."],
"permissions": ["The selected permissions.1 is invalid."]
}
}"
-Validation Error (422):"
{
"message": "The given data was invalid.",
"errors": {
"email": ["The email has already been taken."],
"roles": ["The selected roles.0 is invalid."]
}
}"

###
5- API Delete User (DELETE) https://auth.pnepizza.com/api/v1/users/9 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "User deleted successfully"
}"
the faild reslut could be :
-Deletion Failed (400):"
{
"success": false,
"message": "Failed to delete user",
"error": "Cannot delete user with active sessions"
}"

###
6- API Assign Roles to User https://auth.pnepizza.com/api/v1/users/19/roles/assign:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "roles": ["test role"]
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "Roles assigned successfully",
    "data": {
        "user": {
            "id": 19,
            "name": "test updated",
            "email": "test@test.com",
            "email_verified_at": "2025-08-26T13:03:25.000000Z",
            "created_at": "2025-08-26T13:03:25.000000Z",
            "updated_at": "2025-08-26T13:05:38.000000Z",
            "roles": [
                {
                    "id": 6,
                    "name": "test role",
                    "guard_name": "web",
                    "created_at": "2025-08-26T12:59:40.000000Z",
                    "updated_at": "2025-08-26T12:59:40.000000Z",
                    "pivot": {
                        "model_type": "App\\Models\\User",
                        "model_id": 19,
                        "role_id": 6
                    },
                    "permissions": [
                        {
                            "id": 9,
                            "name": "asdf",
                            "guard_name": "web",
                            "created_at": "2025-08-17T14:35:32.000000Z",
                            "updated_at": "2025-08-17T14:35:32.000000Z",
                            "pivot": {
                                "role_id": 6,
                                "permission_id": 9
                            }
                        },
                        {
                            "id": 14,
                            "name": "test permission",
                            "guard_name": "web",
                            "created_at": "2025-08-26T12:58:39.000000Z",
                            "updated_at": "2025-08-26T12:58:39.000000Z",
                            "pivot": {
                                "role_id": 6,
                                "permission_id": 14
                            }
                        }
                    ]
                }
            ],
            "permissions": [
                {
                    "id": 8,
                    "name": "export data",
                    "guard_name": "web",
                    "created_at": "2025-08-17T11:07:59.000000Z",
                    "updated_at": "2025-08-17T11:07:59.000000Z",
                    "pivot": {
                        "model_type": "App\\Models\\User",
                        "model_id": 19,
                        "permission_id": 8
                    }
                }
            ]
        }
    }
}"
the faild reslut could be :
-Invalid Roles (422):"
{
"message": "The given data was invalid.",
"errors": {
"roles": ["The roles field is required."],
"roles.0": ["The selected roles.0 is invalid."]
}
}"

###
7- API Give Permissions to User https://auth.pnepizza.com/api/v1/users/19/permissions/give:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "permissions": ["export data"]
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "Permissions granted successfully",
    "data": {
        "user": {
            "id": 19,
            "name": "test updated",
            "email": "test@test.com",
            "email_verified_at": "2025-08-26T13:03:25.000000Z",
            "created_at": "2025-08-26T13:03:25.000000Z",
            "updated_at": "2025-08-26T13:05:38.000000Z",
            "roles": [],
            "permissions": [
                {
                    "id": 8,
                    "name": "export data",
                    "guard_name": "web",
                    "created_at": "2025-08-17T11:07:59.000000Z",
                    "updated_at": "2025-08-17T11:07:59.000000Z",
                    "pivot": {
                        "model_type": "App\\Models\\User",
                        "model_id": 19,
                        "permission_id": 8
                    }
                }
            ]
        }
    }
}"


I have a React project using TypeScript, Tailwind CSS, shadcn UI, Redux Toolkit, and Axios. The project integrates with a REST API for managing users, roles, and permissions with these endpoints:
-Permissions API supports: get all permissions, create permission.
-Roles API supports: get all roles, create role, assign permissions to role.
-Users API supports: get all users, create user, get user by ID, update user, delete user, assign roles to user, give permissions to user.
these are the APIs that I have :"
1-Permissions Part:
###
1- API Get All Permissions https://auth.pnepizza.com/api/v1/permissions :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "data": {
        "current_page": 1,
        "data": [
            {
                "id": 1,
                "name": "manage users",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 1,
                            "role_id": 1
                        }
                    },
                    {
                        "id": 5,
                        "name": "dagsdfg",
                        "guard_name": "web",
                        "created_at": "2025-08-18T15:51:10.000000Z",
                        "updated_at": "2025-08-18T15:51:10.000000Z",
                        "pivot": {
                            "permission_id": 1,
                            "role_id": 5
                        }
                    }
                ]
            },
            {
                "id": 2,
                "name": "manage roles",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 2,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 3,
                "name": "manage permissions",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 3,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 4,
                "name": "manage service clients",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 4,
                            "role_id": 1
                        }
                    },
                    {
                        "id": 5,
                        "name": "dagsdfg",
                        "guard_name": "web",
                        "created_at": "2025-08-18T15:51:10.000000Z",
                        "updated_at": "2025-08-18T15:51:10.000000Z",
                        "pivot": {
                            "permission_id": 4,
                            "role_id": 5
                        }
                    }
                ]
            },
            {
                "id": 5,
                "name": "manage auth rules",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 5,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 7,
                "name": "export json data",
                "guard_name": "web",
                "created_at": "2025-08-15T10:36:10.000000Z",
                "updated_at": "2025-08-15T10:36:10.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 7,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 8,
                "name": "export data",
                "guard_name": "web",
                "created_at": "2025-08-17T11:07:59.000000Z",
                "updated_at": "2025-08-17T11:07:59.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 8,
                            "role_id": 1
                        }
                    },
                    {
                        "id": 3,
                        "name": "Editor",
                        "guard_name": "web",
                        "created_at": "2025-08-17T11:09:44.000000Z",
                        "updated_at": "2025-08-17T11:09:44.000000Z",
                        "pivot": {
                            "permission_id": 8,
                            "role_id": 3
                        }
                    }
                ]
            },
            {
                "id": 9,
                "name": "asdf",
                "guard_name": "web",
                "created_at": "2025-08-17T14:35:32.000000Z",
                "updated_at": "2025-08-17T14:35:32.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 9,
                            "role_id": 1
                        }
                    },
                    {
                        "id": 4,
                        "name": "asdf",
                        "guard_name": "web",
                        "created_at": "2025-08-17T14:41:45.000000Z",
                        "updated_at": "2025-08-17T14:41:45.000000Z",
                        "pivot": {
                            "permission_id": 9,
                            "role_id": 4
                        }
                    }
                ]
            },
            {
                "id": 10,
                "name": "asdfasd",
                "guard_name": "web",
                "created_at": "2025-08-18T15:51:27.000000Z",
                "updated_at": "2025-08-18T15:51:27.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 10,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 11,
                "name": "manage stores",
                "guard_name": "web",
                "created_at": "2025-08-19T11:15:37.000000Z",
                "updated_at": "2025-08-19T11:15:37.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 11,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 12,
                "name": "manage user role assignments",
                "guard_name": "web",
                "created_at": "2025-08-19T11:15:37.000000Z",
                "updated_at": "2025-08-19T11:15:37.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 12,
                            "role_id": 1
                        }
                    }
                ]
            },
            {
                "id": 13,
                "name": "manage role hierarchy",
                "guard_name": "web",
                "created_at": "2025-08-19T11:15:37.000000Z",
                "updated_at": "2025-08-19T11:15:37.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "permission_id": 13,
                            "role_id": 1
                        }
                    }
                ]
            }
        ],
        "first_page_url": "https://auth.pnepizza.com/api/v1/permissions?page=1",
        "from": 1,
        "last_page": 1,
        "last_page_url": "https://auth.pnepizza.com/api/v1/permissions?page=1",
        "links": [
            {
                "url": null,
                "label": "&laquo; Previous",
                "active": false
            },
            {
                "url": "https://auth.pnepizza.com/api/v1/permissions?page=1",
                "label": "1",
                "active": true
            },
            {
                "url": null,
                "label": "Next &raquo;",
                "active": false
            }
        ],
        "next_page_url": null,
        "path": "https://auth.pnepizza.com/api/v1/permissions",
        "per_page": 15,
        "prev_page_url": null,
        "to": 12,
        "total": 12
    }
}"

###
2- API Create Permission (POST) https://auth.pnepizza.com/api/v1/permissions:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "name": "test permission",
    "guard_name": "web"
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "Permission created successfully",
    "data": {
        "permission": {
            "guard_name": "web",
            "name": "test permission",
            "updated_at": "2025-08-26T12:58:39.000000Z",
            "created_at": "2025-08-26T12:58:39.000000Z",
            "id": 14
        }
    }
}"
the faild reslut could be :
-Validation Error (422):"
{
"message": "The given data was invalid.",
"errors": {
"name": ["The name field is required.", "The name has already been taken."]
}
}"

2-Roles Part:
####
1- API Get All Roles https://auth.pnepizza.com/api/v1/roles:
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "data": {
        "current_page": 1,
        "data": [
            {
                "id": 1,
                "name": "super-admin",
                "guard_name": "web",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "permissions": [
                    {
                        "id": 1,
                        "name": "manage users",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 1
                        }
                    },
                    {
                        "id": 2,
                        "name": "manage roles",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 2
                        }
                    },
                    {
                        "id": 3,
                        "name": "manage permissions",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 3
                        }
                    },
                    {
                        "id": 4,
                        "name": "manage service clients",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 4
                        }
                    },
                    {
                        "id": 5,
                        "name": "manage auth rules",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 5
                        }
                    },
                    {
                        "id": 7,
                        "name": "export json data",
                        "guard_name": "web",
                        "created_at": "2025-08-15T10:36:10.000000Z",
                        "updated_at": "2025-08-15T10:36:10.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 7
                        }
                    },
                    {
                        "id": 8,
                        "name": "export data",
                        "guard_name": "web",
                        "created_at": "2025-08-17T11:07:59.000000Z",
                        "updated_at": "2025-08-17T11:07:59.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 8
                        }
                    },
                    {
                        "id": 9,
                        "name": "asdf",
                        "guard_name": "web",
                        "created_at": "2025-08-17T14:35:32.000000Z",
                        "updated_at": "2025-08-17T14:35:32.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 9
                        }
                    },
                    {
                        "id": 10,
                        "name": "asdfasd",
                        "guard_name": "web",
                        "created_at": "2025-08-18T15:51:27.000000Z",
                        "updated_at": "2025-08-18T15:51:27.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 10
                        }
                    },
                    {
                        "id": 11,
                        "name": "manage stores",
                        "guard_name": "web",
                        "created_at": "2025-08-19T11:15:37.000000Z",
                        "updated_at": "2025-08-19T11:15:37.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 11
                        }
                    },
                    {
                        "id": 12,
                        "name": "manage user role assignments",
                        "guard_name": "web",
                        "created_at": "2025-08-19T11:15:37.000000Z",
                        "updated_at": "2025-08-19T11:15:37.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 12
                        }
                    },
                    {
                        "id": 13,
                        "name": "manage role hierarchy",
                        "guard_name": "web",
                        "created_at": "2025-08-19T11:15:37.000000Z",
                        "updated_at": "2025-08-19T11:15:37.000000Z",
                        "pivot": {
                            "role_id": 1,
                            "permission_id": 13
                        }
                    }
                ]
            },
            {
                "id": 3,
                "name": "Editor",
                "guard_name": "web",
                "created_at": "2025-08-17T11:09:44.000000Z",
                "updated_at": "2025-08-17T11:09:44.000000Z",
                "permissions": [
                    {
                        "id": 8,
                        "name": "export data",
                        "guard_name": "web",
                        "created_at": "2025-08-17T11:07:59.000000Z",
                        "updated_at": "2025-08-17T11:07:59.000000Z",
                        "pivot": {
                            "role_id": 3,
                            "permission_id": 8
                        }
                    }
                ]
            },
            {
                "id": 4,
                "name": "asdf",
                "guard_name": "web",
                "created_at": "2025-08-17T14:41:45.000000Z",
                "updated_at": "2025-08-17T14:41:45.000000Z",
                "permissions": [
                    {
                        "id": 9,
                        "name": "asdf",
                        "guard_name": "web",
                        "created_at": "2025-08-17T14:35:32.000000Z",
                        "updated_at": "2025-08-17T14:35:32.000000Z",
                        "pivot": {
                            "role_id": 4,
                            "permission_id": 9
                        }
                    }
                ]
            },
            {
                "id": 5,
                "name": "dagsdfg",
                "guard_name": "web",
                "created_at": "2025-08-18T15:51:10.000000Z",
                "updated_at": "2025-08-18T15:51:10.000000Z",
                "permissions": [
                    {
                        "id": 1,
                        "name": "manage users",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 5,
                            "permission_id": 1
                        }
                    },
                    {
                        "id": 4,
                        "name": "manage service clients",
                        "guard_name": "web",
                        "created_at": "2025-08-12T16:35:55.000000Z",
                        "updated_at": "2025-08-12T16:35:55.000000Z",
                        "pivot": {
                            "role_id": 5,
                            "permission_id": 4
                        }
                    }
                ]
            }
        ],
        "first_page_url": "https://auth.pnepizza.com/api/v1/roles?page=1",
        "from": 1,
        "last_page": 1,
        "last_page_url": "https://auth.pnepizza.com/api/v1/roles?page=1",
        "links": [
            {
                "url": null,
                "label": "&laquo; Previous",
                "active": false
            },
            {
                "url": "https://auth.pnepizza.com/api/v1/roles?page=1",
                "label": "1",
                "active": true
            },
            {
                "url": null,
                "label": "Next &raquo;",
                "active": false
            }
        ],
        "next_page_url": null,
        "path": "https://auth.pnepizza.com/api/v1/roles",
        "per_page": 15,
        "prev_page_url": null,
        "to": 4,
        "total": 4
    }
}"

###
2- API Create Role (POST) https://auth.pnepizza.com/api/v1/roles:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "name": "test role",
    "guard_name": "web",
    "permissions": ["test permission"]
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "Role created successfully",
    "data": {
        "role": {
            "guard_name": "web",
            "name": "test role",
            "updated_at": "2025-08-26T12:59:40.000000Z",
            "created_at": "2025-08-26T12:59:40.000000Z",
            "id": 6,
            "permissions": [
                {
                    "id": 14,
                    "name": "test permission",
                    "guard_name": "web",
                    "created_at": "2025-08-26T12:58:39.000000Z",
                    "updated_at": "2025-08-26T12:58:39.000000Z",
                    "pivot": {
                        "role_id": 6,
                        "permission_id": 14
                    }
                }
            ]
        }
    }
}"
the faild reslut could be :
-Validation Error (422):"
{
"message": "The given data was invalid.",
"errors": {
"name": ["The name field is required.", "The name has already been taken."],
"permissions": ["The selected permissions.0 is invalid."]
}
}"

###
3- API Assign Permissions to Role (POST) https://auth.pnepizza.com/api/v1/roles/6/permissions/assign:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "permissions": ["asdf"]
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "Permissions assigned to role successfully",
    "data": {
        "role": {
            "id": 6,
            "name": "test role",
            "guard_name": "web",
            "created_at": "2025-08-26T12:59:40.000000Z",
            "updated_at": "2025-08-26T12:59:40.000000Z",
            "permissions": [
                {
                    "id": 9,
                    "name": "asdf",
                    "guard_name": "web",
                    "created_at": "2025-08-17T14:35:32.000000Z",
                    "updated_at": "2025-08-17T14:35:32.000000Z",
                    "pivot": {
                        "role_id": 6,
                        "permission_id": 9
                    }
                },
                {
                    "id": 14,
                    "name": "test permission",
                    "guard_name": "web",
                    "created_at": "2025-08-26T12:58:39.000000Z",
                    "updated_at": "2025-08-26T12:58:39.000000Z",
                    "pivot": {
                        "role_id": 6,
                        "permission_id": 14
                    }
                }
            ]
        }
    }
}"

3-Users Part:
###
1- API Get All Users https://auth.pnepizza.com/api/v1/users?per_page=10&search=&role= :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "data": {
        "current_page": 1,
        "data": [
            {
                "id": 1,
                "name": "Adler Morgan",
                "email": "adlermorgan12@gmail.com",
                "email_verified_at": "2025-08-12T16:35:55.000000Z",
                "created_at": "2025-08-12T16:35:55.000000Z",
                "updated_at": "2025-08-12T16:35:55.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 2,
                                "name": "manage roles"
                            },
                            {
                                "id": 3,
                                "name": "manage permissions"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            },
                            {
                                "id": 5,
                                "name": "manage auth rules"
                            },
                            {
                                "id": 7,
                                "name": "export json data"
                            },
                            {
                                "id": 8,
                                "name": "export data"
                            },
                            {
                                "id": 9,
                                "name": "asdf"
                            },
                            {
                                "id": 10,
                                "name": "asdfasd"
                            },
                            {
                                "id": 11,
                                "name": "manage stores"
                            },
                            {
                                "id": 12,
                                "name": "manage user role assignments"
                            },
                            {
                                "id": 13,
                                "name": "manage role hierarchy"
                            }
                        ]
                    }
                ],
                "permissions": [],
                "stores": []
            },
            {
                "id": 5,
                "name": "charlie",
                "email": "charliemiller1118@gmail.com",
                "email_verified_at": "2025-08-13T14:14:43.000000Z",
                "created_at": "2025-08-13T14:13:29.000000Z",
                "updated_at": "2025-08-13T14:14:43.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 2,
                                "name": "manage roles"
                            },
                            {
                                "id": 3,
                                "name": "manage permissions"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            },
                            {
                                "id": 5,
                                "name": "manage auth rules"
                            },
                            {
                                "id": 7,
                                "name": "export json data"
                            },
                            {
                                "id": 8,
                                "name": "export data"
                            },
                            {
                                "id": 9,
                                "name": "asdf"
                            },
                            {
                                "id": 10,
                                "name": "asdfasd"
                            },
                            {
                                "id": 11,
                                "name": "manage stores"
                            },
                            {
                                "id": 12,
                                "name": "manage user role assignments"
                            },
                            {
                                "id": 13,
                                "name": "manage role hierarchy"
                            }
                        ]
                    }
                ],
                "permissions": [],
                "stores": []
            },
            {
                "id": 6,
                "name": "george Warren",
                "email": "george.warren.pne@gmail.com",
                "email_verified_at": "2025-08-14T10:42:32.000000Z",
                "created_at": "2025-08-14T10:41:42.000000Z",
                "updated_at": "2025-08-14T10:42:32.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 2,
                                "name": "manage roles"
                            },
                            {
                                "id": 3,
                                "name": "manage permissions"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            },
                            {
                                "id": 5,
                                "name": "manage auth rules"
                            },
                            {
                                "id": 7,
                                "name": "export json data"
                            },
                            {
                                "id": 8,
                                "name": "export data"
                            },
                            {
                                "id": 9,
                                "name": "asdf"
                            },
                            {
                                "id": 10,
                                "name": "asdfasd"
                            },
                            {
                                "id": 11,
                                "name": "manage stores"
                            },
                            {
                                "id": 12,
                                "name": "manage user role assignments"
                            },
                            {
                                "id": 13,
                                "name": "manage role hierarchy"
                            }
                        ]
                    }
                ],
                "permissions": [],
                "stores": []
            },
            {
                "id": 7,
                "name": "Mari",
                "email": "shahdal0934@gmail.com",
                "email_verified_at": "2025-08-15T10:01:56.000000Z",
                "created_at": "2025-08-15T10:00:37.000000Z",
                "updated_at": "2025-08-15T10:01:56.000000Z",
                "roles": [
                    {
                        "id": 1,
                        "name": "super-admin",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 2,
                                "name": "manage roles"
                            },
                            {
                                "id": 3,
                                "name": "manage permissions"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            },
                            {
                                "id": 5,
                                "name": "manage auth rules"
                            },
                            {
                                "id": 7,
                                "name": "export json data"
                            },
                            {
                                "id": 8,
                                "name": "export data"
                            },
                            {
                                "id": 9,
                                "name": "asdf"
                            },
                            {
                                "id": 10,
                                "name": "asdfasd"
                            },
                            {
                                "id": 11,
                                "name": "manage stores"
                            },
                            {
                                "id": 12,
                                "name": "manage user role assignments"
                            },
                            {
                                "id": 13,
                                "name": "manage role hierarchy"
                            }
                        ]
                    }
                ],
                "permissions": [],
                "stores": []
            },
            {
                "id": 11,
                "name": "asdf",
                "email": "asdf@asdf.asdf",
                "email_verified_at": "2025-08-17T12:57:09.000000Z",
                "created_at": "2025-08-17T12:57:09.000000Z",
                "updated_at": "2025-08-17T12:57:09.000000Z",
                "roles": [
                    {
                        "id": 3,
                        "name": "Editor",
                        "permissions": [
                            {
                                "id": 8,
                                "name": "export data"
                            }
                        ]
                    }
                ],
                "permissions": [
                    {
                        "id": 5,
                        "name": "manage auth rules"
                    }
                ],
                "stores": []
            },
            {
                "id": 12,
                "name": "sam",
                "email": "fefijeh749@baxidy.com",
                "email_verified_at": "2025-08-18T13:51:03.000000Z",
                "created_at": "2025-08-18T13:50:36.000000Z",
                "updated_at": "2025-08-18T13:52:19.000000Z",
                "roles": [
                    {
                        "id": 5,
                        "name": "dagsdfg",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            }
                        ]
                    }
                ],
                "permissions": [],
                "stores": []
            },
            {
                "id": 15,
                "name": "asdf",
                "email": "as@as.as",
                "email_verified_at": "2025-08-22T11:40:15.000000Z",
                "created_at": "2025-08-22T11:40:15.000000Z",
                "updated_at": "2025-08-22T11:40:15.000000Z",
                "roles": [
                    {
                        "id": 5,
                        "name": "dagsdfg",
                        "permissions": [
                            {
                                "id": 1,
                                "name": "manage users"
                            },
                            {
                                "id": 4,
                                "name": "manage service clients"
                            }
                        ]
                    }
                ],
                "permissions": [
                    {
                        "id": 2,
                        "name": "manage roles"
                    }
                ],
                "stores": [
                    {
                        "store": {
                            "id": "STORE_002",
                            "name": "New Store Location"
                        },
                        "roles": [
                            {
                                "id": 4,
                                "name": "asdf",
                                "permissions": [
                                    {
                                        "id": 9,
                                        "name": "asdf"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "store": {
                            "id": "STORE_004",
                            "name": "Updated Store Name"
                        },
                        "roles": [
                            {
                                "id": 4,
                                "name": "asdf",
                                "permissions": [
                                    {
                                        "id": 9,
                                        "name": "asdf"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "id": 16,
                "name": "sssssss",
                "email": "kinaleh622@ahanim.com",
                "email_verified_at": null,
                "created_at": "2025-08-25T16:11:52.000000Z",
                "updated_at": "2025-08-25T16:11:52.000000Z",
                "roles": [],
                "permissions": [],
                "stores": []
            },
            {
                "id": 17,
                "name": "qqqq",
                "email": "kinaleh62@ahanim.com",
                "email_verified_at": null,
                "created_at": "2025-08-25T16:41:25.000000Z",
                "updated_at": "2025-08-25T16:41:25.000000Z",
                "roles": [],
                "permissions": [],
                "stores": []
            },
            {
                "id": 18,
                "name": "pppp",
                "email": "ucnj4om4sz@wyoxafp.com",
                "email_verified_at": "2025-08-25T16:57:04.000000Z",
                "created_at": "2025-08-25T16:50:04.000000Z",
                "updated_at": "2025-08-25T17:26:33.000000Z",
                "roles": [],
                "permissions": [],
                "stores": []
            }
        ],
        "first_page_url": "https://auth.pnepizza.com/api/v1/users?page=1",
        "from": 1,
        "last_page": 1,
        "last_page_url": "https://auth.pnepizza.com/api/v1/users?page=1",
        "links": [
            {
                "url": null,
                "label": "&laquo; Previous",
                "active": false
            },
            {
                "url": "https://auth.pnepizza.com/api/v1/users?page=1",
                "label": "1",
                "active": true
            },
            {
                "url": null,
                "label": "Next &raquo;",
                "active": false
            }
        ],
        "next_page_url": null,
        "path": "https://auth.pnepizza.com/api/v1/users",
        "per_page": 10,
        "prev_page_url": null,
        "to": 10,
        "total": 10
    }
}"
the faild reslut could be :
-Permission Denied (403):"
{
"message": "This action is unauthorized."
}"

###
2- API Create User (POST) https://auth.pnepizza.com/api/v1/users :
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "name": "test",
    "email": "test@test.com",
    "password": "password123",
    "password_confirmation": "password123",
    "roles": ["test role"],
    "permissions": []
}", 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "User created successfully",
    "data": {
        "user": {
            "name": "test",
            "email": "test@test.com",
            "email_verified_at": "2025-08-26T13:03:25.000000Z",
            "updated_at": "2025-08-26T13:03:25.000000Z",
            "created_at": "2025-08-26T13:03:25.000000Z",
            "id": 19,
            "roles": [
                {
                    "id": 6,
                    "name": "test role",
                    "guard_name": "web",
                    "created_at": "2025-08-26T12:59:40.000000Z",
                    "updated_at": "2025-08-26T12:59:40.000000Z",
                    "pivot": {
                        "model_type": "App\\Models\\User",
                        "model_id": 19,
                        "role_id": 6
                    },
                    "permissions": [
                        {
                            "id": 9,
                            "name": "asdf",
                            "guard_name": "web",
                            "created_at": "2025-08-17T14:35:32.000000Z",
                            "updated_at": "2025-08-17T14:35:32.000000Z",
                            "pivot": {
                                "role_id": 6,
                                "permission_id": 9
                            }
                        },
                        {
                            "id": 14,
                            "name": "test permission",
                            "guard_name": "web",
                            "created_at": "2025-08-26T12:58:39.000000Z",
                            "updated_at": "2025-08-26T12:58:39.000000Z",
                            "pivot": {
                                "role_id": 6,
                                "permission_id": 14
                            }
                        }
                    ]
                }
            ],
            "permissions": []
        }
    }
}"
the faild reslut could be :
-Validation Error (422):"
{
"message": "The given data was invalid.",
"errors": {
"name": ["The name field is required."],
"email": ["The email has already been taken."],
"password": ["The password must be at least 8 characters."],
"roles": ["The selected roles.0 is invalid."],
"permissions": ["The selected permissions.1 is invalid."]
}
}"
-Creation Failed (400):"
{
"success": false,
"message": "Failed to create user",
"error": "Role assignment failed"
}"


###
3- API Get User by ID https://auth.pnepizza.com/api/v1/users/15 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "data": {
        "user": {
            "id": 15,
            "name": "asdf",
            "email": "as@as.as",
            "email_verified_at": "2025-08-22T11:40:15.000000Z",
            "created_at": "2025-08-22T11:40:15.000000Z",
            "updated_at": "2025-08-22T11:40:15.000000Z",
            "roles": [
                {
                    "id": 5,
                    "name": "dagsdfg",
                    "permissions": [
                        {
                            "id": 1,
                            "name": "manage users"
                        },
                        {
                            "id": 4,
                            "name": "manage service clients"
                        }
                    ]
                }
            ],
            "permissions": [
                {
                    "id": 2,
                    "name": "manage roles"
                }
            ],
            "stores": [
                {
                    "store": {
                        "id": "STORE_002",
                        "name": "New Store Location"
                    },
                    "roles": [
                        {
                            "id": 4,
                            "name": "asdf",
                            "permissions": [
                                {
                                    "id": 9,
                                    "name": "asdf"
                                }
                            ]
                        }
                    ]
                },
                {
                    "store": {
                        "id": "STORE_004",
                        "name": "Updated Store Name"
                    },
                    "roles": [
                        {
                            "id": 4,
                            "name": "asdf",
                            "permissions": [
                                {
                                    "id": 9,
                                    "name": "asdf"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }
}"
the faild reslut could be :
-User Not Found (404):"
{
"message": "No query results for model [App\\Models\\User] 999"
}"

###
4- API Update User (PUT) https://auth.pnepizza.com/api/v1/users/19:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "name": "test updated",
    "roles": [],
    "permissions": []
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "User updated successfully",
    "data": {
        "user": {
            "id": 19,
            "name": "test updated",
            "email": "test@test.com",
            "email_verified_at": "2025-08-26T13:03:25.000000Z",
            "created_at": "2025-08-26T13:03:25.000000Z",
            "updated_at": "2025-08-26T13:05:38.000000Z",
            "roles": [],
            "permissions": []
        }
    }
}"
the faild reslut could be :
-Validation Error (422):"
{
"message": "The given data was invalid.",
"errors": {
"name": ["The name field is required."],
"email": ["The email has already been taken."],
"password": ["The password must be at least 8 characters."],
"roles": ["The selected roles.0 is invalid."],
"permissions": ["The selected permissions.1 is invalid."]
}
}"
-Validation Error (422):"
{
"message": "The given data was invalid.",
"errors": {
"email": ["The email has already been taken."],
"roles": ["The selected roles.0 is invalid."]
}
}"

###
5- API Delete User (DELETE) https://auth.pnepizza.com/api/v1/users/9 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "User deleted successfully"
}"
the faild reslut could be :
-Deletion Failed (400):"
{
"success": false,
"message": "Failed to delete user",
"error": "Cannot delete user with active sessions"
}"

###
6- API Assign Roles to User https://auth.pnepizza.com/api/v1/users/19/roles/assign:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "roles": ["test role"]
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "Roles assigned successfully",
    "data": {
        "user": {
            "id": 19,
            "name": "test updated",
            "email": "test@test.com",
            "email_verified_at": "2025-08-26T13:03:25.000000Z",
            "created_at": "2025-08-26T13:03:25.000000Z",
            "updated_at": "2025-08-26T13:05:38.000000Z",
            "roles": [
                {
                    "id": 6,
                    "name": "test role",
                    "guard_name": "web",
                    "created_at": "2025-08-26T12:59:40.000000Z",
                    "updated_at": "2025-08-26T12:59:40.000000Z",
                    "pivot": {
                        "model_type": "App\\Models\\User",
                        "model_id": 19,
                        "role_id": 6
                    },
                    "permissions": [
                        {
                            "id": 9,
                            "name": "asdf",
                            "guard_name": "web",
                            "created_at": "2025-08-17T14:35:32.000000Z",
                            "updated_at": "2025-08-17T14:35:32.000000Z",
                            "pivot": {
                                "role_id": 6,
                                "permission_id": 9
                            }
                        },
                        {
                            "id": 14,
                            "name": "test permission",
                            "guard_name": "web",
                            "created_at": "2025-08-26T12:58:39.000000Z",
                            "updated_at": "2025-08-26T12:58:39.000000Z",
                            "pivot": {
                                "role_id": 6,
                                "permission_id": 14
                            }
                        }
                    ]
                }
            ],
            "permissions": [
                {
                    "id": 8,
                    "name": "export data",
                    "guard_name": "web",
                    "created_at": "2025-08-17T11:07:59.000000Z",
                    "updated_at": "2025-08-17T11:07:59.000000Z",
                    "pivot": {
                        "model_type": "App\\Models\\User",
                        "model_id": 19,
                        "permission_id": 8
                    }
                }
            ]
        }
    }
}"
the faild reslut could be :
-Invalid Roles (422):"
{
"message": "The given data was invalid.",
"errors": {
"roles": ["The roles field is required."],
"roles.0": ["The selected roles.0 is invalid."]
}
}"

###
7- API Give Permissions to User https://auth.pnepizza.com/api/v1/users/19/permissions/give:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "permissions": ["export data"]
}"
if the auth token was valid the success result will be something like :"
{
    "success": true,
    "message": "Permissions granted successfully",
    "data": {
        "user": {
            "id": 19,
            "name": "test updated",
            "email": "test@test.com",
            "email_verified_at": "2025-08-26T13:03:25.000000Z",
            "created_at": "2025-08-26T13:03:25.000000Z",
            "updated_at": "2025-08-26T13:05:38.000000Z",
            "roles": [],
            "permissions": [
                {
                    "id": 8,
                    "name": "export data",
                    "guard_name": "web",
                    "created_at": "2025-08-17T11:07:59.000000Z",
                    "updated_at": "2025-08-17T11:07:59.000000Z",
                    "pivot": {
                        "model_type": "App\\Models\\User",
                        "model_id": 19,
                        "permission_id": 8
                    }
                }
            ]
        }
    }
}"
"
Authentication tokens are stored encrypted in localStorage and also kept in the Redux store, with a utility function to retrieve the token from Redux first and fallback to localStorage decryption.
these is how to use this in the service :"
// Helper function to get token from Redux store or localStorage fallback
const getAuthToken = (): string | null => {
  const state = store.getState();
  const reduxToken = state.auth?.token;
  if (reduxToken) {
    return reduxToken;
  }
  // Fallback to decrypt token from localStorage
  return loadToken();
};
// Request interceptor to add auth token
apiClient.interceptors.request.use(
  (config) => {
    const token = getAuthToken();
    if (token && config.headers) {
      config.headers['Authorization'] = `Bearer ${token}`;
    }
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);"
I want well-structured, modular, and production-ready TypeScript files for each domain (users, roles, permissions). This includes:
-Types definitions co-located or feature-based for scalability and maintainability
-Redux slices using Redux Toolkit with proper async thunk error handling
-Axios API service layers that transparently handle authentication tokens and errors gracefully
-React hooks to abstract business logic and side effects cleanly
-Utility files as needed for token management or error handling
-Clear separation of concerns and folder structure following modern best practices (modular, feature-based, maintainable, scalable)
-Comprehensive error handling, converting API errors into user-friendly messages, and handling token expiration or invalidation properly
Please generate fully production-ready, clean, and idiomatic TypeScript code following 2025 modern React best practices, emphasizing:
-Scalability and modularity of folder and file organization
-Strong typing throughout with meaningful types and interfaces
-Clear, concise comments explaining file responsibility and usage
-Error handling best practices in Redux slices and API layers
-Token retrieval and inclusion in API calls handled uniformly with fail-safes
-Reusable hooks encapsulating API calls and state management
-Provide complete separate code examples for each domain (users, roles, permissions), structured for clarity and maintainability in a real-world professional React project.