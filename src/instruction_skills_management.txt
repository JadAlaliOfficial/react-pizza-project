now we are in the skill Management part , I will give you the APIs one by one :
1- API Get All skills http://127.0.0.1:8000/api/skills :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
[
    {
        "id": 2,
        "name": "AT",
        "slug": "test",
        "created_at": "2025-09-10T15:35:57.000000Z",
        "updated_at": "2025-09-10T15:35:57.000000Z"
    },
    {
        "id": 3,
        "name": "T",
        "slug": "test test",
        "created_at": "2025-09-11T15:28:37.000000Z",
        "updated_at": "2025-09-11T15:30:25.000000Z"
    }
]
"

2- API Create skill (POST) http://127.0.0.1:8000/api/skills :
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "name": "T",
    "slug": "test"
}
", 
if the auth token was valid the success result will be something like :"
{
    "name": "T",
    "slug": "test",
    "updated_at": "2025-09-10T13:12:45.000000Z",
    "created_at": "2025-09-10T13:12:45.000000Z",
    "id": 1
}"
and here is the validation rules from the backend :"
{'name' => 'required|string|max:255',
'slug' => 'nullable|string|max:255|unique:skills,slug'}"


3- API Get skill By ID http://127.0.0.1:8000/api/skills/1 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "id": 2,
    "name": "AT",
    "slug": "test",
    "created_at": "2025-09-10T15:35:57.000000Z",
    "updated_at": "2025-09-10T15:35:57.000000Z",
    "emp_infos": [
        {
            "id": 2,
            "store_id": "STORE_X46",
            "full_name": "AT",
            "date_of_birth": "2014-08-08T00:00:00.000000Z",
            "has_family": true,
            "has_car": true,
            "is_arabic_team": true,
            "notes": "nothing",
            "status": "Terminated",
            "created_at": "2025-09-10T15:33:17.000000Z",
            "updated_at": "2025-09-10T15:33:17.000000Z",
            "pivot": {
                "skill_id": 2,
                "emp_info_id": 2,
                "rating": "A",
                "created_at": "2025-09-10T15:46:50.000000Z",
                "updated_at": "2025-09-10T15:46:50.000000Z"
            }
        },
        {
            "id": 3,
            "store_id": "STORE_X46",
            "full_name": "ATse",
            "date_of_birth": "2014-08-08T00:00:00.000000Z",
            "has_family": true,
            "has_car": true,
            "is_arabic_team": true,
            "notes": "nothing",
            "status": "Terminated",
            "created_at": "2025-09-10T17:12:11.000000Z",
            "updated_at": "2025-09-10T17:12:11.000000Z",
            "pivot": {
                "skill_id": 2,
                "emp_info_id": 3,
                "rating": "A",
                "created_at": "2025-09-10T17:12:23.000000Z",
                "updated_at": "2025-09-10T17:12:23.000000Z"
            }
        }
    ]
}"

4- API Update skill (PUT) http://127.0.0.1:8000/api/skills/1:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :" 
{
    "name": "T",
    "slug": "test"
}"
if the auth token was valid the success result will be something like :"
{
    "id": 1,
    "name": "T",
    "slug": "test",
    "created_at": "2025-09-10T13:12:45.000000Z",
    "updated_at": "2025-09-10T13:12:45.000000Z"
}"
and here is the validation rules from the backend :"
'name' => 'required|string|max:255',
'slug' => ['nullable', 'string', 'max:255', Rule::unique('skills', 'slug')->ignore($skill->id)]"

5- API Delete skill (Delete) https://auth.pnepizza.com/api/v1/users/9 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be a 204 response no content 
