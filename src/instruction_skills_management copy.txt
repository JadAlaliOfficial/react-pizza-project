now we are in the preference Management part , I will give you the APIs one by one :
1- API Get All preferences http://127.0.0.1:8000/api/preferences :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
[
    {
        "id": 2,
        "name": "T",
        "slug": "test",
        "created_at": "2025-09-10T15:57:38.000000Z",
        "updated_at": "2025-09-10T15:57:50.000000Z"
    },
    {
        "id": 3,
        "name": "AT",
        "slug": "another test",
        "created_at": "2025-09-11T17:09:45.000000Z",
        "updated_at": "2025-09-11T17:09:45.000000Z"
    }
]
"

2- API Create preference (POST) http://127.0.0.1:8000/api/preferences :
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "name": "AT",
    "slug": "another test"
}
", 
if the auth token was valid the success result will be something like :"
{
    "name": "AT",
    "slug": "another test",
    "updated_at": "2025-09-11T17:09:45.000000Z",
    "created_at": "2025-09-11T17:09:45.000000Z",
    "id": 3
}"
and here is the validation rules from the backend :"
{'name' => 'required|string|max:255',
'slug' => 'nullable|string|max:255|unique:preferences,slug'}"


3- API Get preference By ID http://127.0.0.1:8000/api/preferences/2 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "id": 2,
    "name": "T",
    "slug": "test",
    "created_at": "2025-09-10T15:57:38.000000Z",
    "updated_at": "2025-09-10T15:57:50.000000Z",
    "schedule_preferences": [
        {
            "id": 1,
            "emp_info_id": 2,
            "preference_id": 2,
            "maximum_hours": 8,
            "employment_type": "FT",
            "created_at": "2025-09-10T16:20:49.000000Z",
            "updated_at": "2025-09-10T16:20:49.000000Z"
        }
    ]
}"

4- API Update preference (PUT) http://127.0.0.1:8000/api/preferences/1:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :" 
{
    "name": "T",
    "slug": "test"
}"
if the auth token was valid the success result will be something like :"
{
    "id": 2,
    "name": "T",
    "slug": "test",
    "created_at": "2025-09-10T15:57:38.000000Z",
    "updated_at": "2025-09-10T15:57:50.000000Z"
}"
and here is the validation rules from the backend :"
'name' => 'required|string|max:255',
'slug' => ['nullable', 'string', 'max:255', Rule::unique('preferences', 'slug')->ignore($preference->id)]"

5- API Delete preference (Delete) https://auth.pnepizza.com/api/v1/users/9 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be a 204 response no content 
