now we are in the employee Management part , I will give you the APIs one by one :
1- API Get All employees http://127.0.0.1:8000/api/employees :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
[
    {
        "id": 2,
        "store_id": "STORE_X46",
        "full_name": "AT",
        "date_of_birth": "2014-08-08T00:00:00.000000Z",
        "has_family": true,
        "has_car": true,
        "is_arabic_team": true,
        "notes": "nothing",
        "status": "Terminated",
        "created_at": "2025-09-10T15:33:17.000000Z",
        "updated_at": "2025-09-10T15:33:17.000000Z",
        "store": {
            "id": "STORE_X46",
            "name": "AT",
            "number": "46",
            "created_at": "2025-09-10T15:11:44.000000Z",
            "updated_at": "2025-09-10T15:11:44.000000Z"
        },
        "skills": [
            {
                "id": 2,
                "name": "AT",
                "slug": "test",
                "created_at": "2025-09-10T15:35:57.000000Z",
                "updated_at": "2025-09-10T15:35:57.000000Z",
                "pivot": {
                    "emp_info_id": 2,
                    "skill_id": 2,
                    "rating": "A",
                    "created_at": "2025-09-10T15:46:50.000000Z",
                    "updated_at": "2025-09-10T15:46:50.000000Z"
                }
            }
        ],
        "schedule_preferences": [
            {
                "id": 1,
                "emp_info_id": 2,
                "preference_id": 2,
                "maximum_hours": 8,
                "employment_type": "FT",
                "created_at": "2025-09-10T16:20:49.000000Z",
                "updated_at": "2025-09-10T16:20:49.000000Z"
            }
        ],
        "employment_info": {
            "id": 2,
            "emp_info_id": 2,
            "position_id": 4,
            "paychex_ids": [
                "8"
            ],
            "employment_type": "1099",
            "hired_date": "2024-08-08T00:00:00.000000Z",
            "base_pay": "90.00",
            "performance_pay": "28.00",
            "has_uniform": true,
            "created_at": "2025-09-10T16:37:45.000000Z",
            "updated_at": "2025-09-10T16:37:45.000000Z"
        }
    },
    {
        "id": 3,
        "store_id": "STORE_X46",
        "full_name": "ATse",
        "date_of_birth": "2014-08-08T00:00:00.000000Z",
        "has_family": true,
        "has_car": true,
        "is_arabic_team": true,
        "notes": "nothing",
        "status": "Terminated",
        "created_at": "2025-09-10T17:12:11.000000Z",
        "updated_at": "2025-09-10T17:12:11.000000Z",
        "store": {
            "id": "STORE_X46",
            "name": "AT",
            "number": "46",
            "created_at": "2025-09-10T15:11:44.000000Z",
            "updated_at": "2025-09-10T15:11:44.000000Z"
        },
        "skills": [
            {
                "id": 2,
                "name": "AT",
                "slug": "test",
                "created_at": "2025-09-10T15:35:57.000000Z",
                "updated_at": "2025-09-10T15:35:57.000000Z",
                "pivot": {
                    "emp_info_id": 3,
                    "skill_id": 2,
                    "rating": "A",
                    "created_at": "2025-09-10T17:12:23.000000Z",
                    "updated_at": "2025-09-10T17:12:23.000000Z"
                }
            }
        ],
        "schedule_preferences": [],
        "employment_info": null
    }
]"

2- API Create employee (POST) http://127.0.0.1:8000/api/employees :
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "store_id" : "STORE_X46",
    "full_name": "ATse",
    "date_of_birth": "8-8-2014",
    "has_family" :true ,
    "has_car" : true,
    "is_arabic_team" : true,
    "notes" : "nothing",
    "status" : "Terminated"
}", 
if the auth token was valid the success result will be something like :"
{
    "store_id": "STORE_X46",
    "full_name": "ATse",
    "date_of_birth": "2014-08-08T00:00:00.000000Z",
    "has_family": true,
    "has_car": true,
    "is_arabic_team": true,
    "notes": "nothing",
    "status": "Terminated",
    "updated_at": "2025-09-12T11:15:45.000000Z",
    "created_at": "2025-09-12T11:15:45.000000Z",
    "id": 4
}"
and here is the validation rules from the backend :"
'store_id' => 'required|exists:stores,id',
'full_name' => 'required|string|max:255',
'date_of_birth' => 'required|date',
'has_family' => 'required|boolean',
'has_car' => 'required|boolean',
'is_arabic_team' => 'required|boolean',
'notes' => 'nullable|string',
'status' => ['required', Rule::in(['Active', 'Suspension', 'Terminated', 'On Leave'])]"


3- API Get employee By ID http://127.0.0.1:8000/api/employees/2 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "id": 2,
    "store_id": "STORE_X46",
    "full_name": "AT",
    "date_of_birth": "2014-08-08T00:00:00.000000Z",
    "has_family": true,
    "has_car": true,
    "is_arabic_team": true,
    "notes": "nothing",
    "status": "Terminated",
    "created_at": "2025-09-10T15:33:17.000000Z",
    "updated_at": "2025-09-10T15:33:17.000000Z",
    "store": {
        "id": "STORE_X46",
        "name": "AT",
        "number": "46",
        "created_at": "2025-09-10T15:11:44.000000Z",
        "updated_at": "2025-09-10T15:11:44.000000Z"
    },
    "skills": [
        {
            "id": 2,
            "name": "AT",
            "slug": "test",
            "created_at": "2025-09-10T15:35:57.000000Z",
            "updated_at": "2025-09-10T15:35:57.000000Z",
            "pivot": {
                "emp_info_id": 2,
                "skill_id": 2,
                "rating": "A",
                "created_at": "2025-09-10T15:46:50.000000Z",
                "updated_at": "2025-09-10T15:46:50.000000Z"
            }
        }
    ],
    "schedule_preferences": [
        {
            "id": 1,
            "emp_info_id": 2,
            "preference_id": 2,
            "maximum_hours": 8,
            "employment_type": "FT",
            "created_at": "2025-09-10T16:20:49.000000Z",
            "updated_at": "2025-09-10T16:20:49.000000Z"
        }
    ],
    "employment_info": {
        "id": 2,
        "emp_info_id": 2,
        "position_id": 4,
        "paychex_ids": [
            "8"
        ],
        "employment_type": "1099",
        "hired_date": "2024-08-08T00:00:00.000000Z",
        "base_pay": "90.00",
        "performance_pay": "28.00",
        "has_uniform": true,
        "created_at": "2025-09-10T16:37:45.000000Z",
        "updated_at": "2025-09-10T16:37:45.000000Z"
    }
}"

4- API Update employee (PUT) http://127.0.0.1:8000/api/employees/4:
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :" 
{
    "store_id" : "STORE_X46",
    "full_name": "AT",
    "date_of_birth": "8-8-2014",
    "has_family" :true ,
    "has_car" : true,
    "is_arabic_team" : true,
    "notes" : "nothing",
    "status" : "Terminated"
}"
if the auth token was valid the success result will be something like :"
{
    "id": 4,
    "store_id": "STORE_X46",
    "full_name": "AT",
    "date_of_birth": "2014-08-08T00:00:00.000000Z",
    "has_family": true,
    "has_car": true,
    "is_arabic_team": true,
    "notes": "nothing",
    "status": "Terminated",
    "created_at": "2025-09-12T11:15:45.000000Z",
    "updated_at": "2025-09-12T11:20:36.000000Z"
}"
and here is the validation rules from the backend :"
'store_id' => 'required|exists:stores,id',
'full_name' => 'required|string|max:255',
'date_of_birth' => 'required|date',
'has_family' => 'required|boolean',
'has_car' => 'required|boolean',
'is_arabic_team' => 'required|boolean',
'notes' => 'nullable|string',
'status' => ['required', Rule::in(['Active', 'Suspension', 'Terminated', 'On Leave'])]"

5- API Delete employee (Delete) https://auth.pnepizza.com/api/v1/users/9 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be a 204 response no content 

6- API Attach Skill (POST) http://127.0.0.1:8000/api/employees/3/skills/2 :
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "rating" : "A"
}", 
if the auth token was valid the success result will be a 204 response no content 
and here is the validation rules from the backend :"
'rating' => ['required', Rule::in(['A+', 'A', 'B', 'C', 'D'])]"

7- API Update Attach Skill (PUT) http://127.0.0.1:8000/api/employees/3/skills/2 :
we should give the auth_token and the Accept is application/json and the Conent-Type is application/json in the header
the body should look like :"
{
    "rating" : "B"
}", 
if the auth token was valid the success result will be a 204 response no content 
and here is the validation rules from the backend :"
'rating' => ['required', Rule::in(['A+', 'A', 'B', 'C', 'D'])]"


8- API Delete Attach Skill (DELETE) http://127.0.0.1:8000/api/employees/3/skills/2 :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be a 204 response no content 

9- API Get Employees By Store Id http://127.0.0.1:8000/api/stores/STORE_X46/employees :
we should give the auth_token and the Accept is application/json in the header and there is no body , 
if the auth token was valid the success result will be something like :"
{
    "current_page": 1,
    "data": [
        {
            "id": 2,
            "store_id": "STORE_X46",
            "full_name": "AT",
            "date_of_birth": "2014-08-08T00:00:00.000000Z",
            "has_family": true,
            "has_car": true,
            "is_arabic_team": true,
            "notes": "nothing",
            "status": "Terminated",
            "created_at": "2025-09-10T15:33:17.000000Z",
            "updated_at": "2025-09-10T15:33:17.000000Z",
            "store": {
                "id": "STORE_X46",
                "name": "AT",
                "number": "46",
                "created_at": "2025-09-10T15:11:44.000000Z",
                "updated_at": "2025-09-10T15:11:44.000000Z"
            },
            "skills": [
                {
                    "id": 2,
                    "name": "AT",
                    "slug": "test",
                    "created_at": "2025-09-10T15:35:57.000000Z",
                    "updated_at": "2025-09-10T15:35:57.000000Z",
                    "pivot": {
                        "emp_info_id": 2,
                        "skill_id": 2,
                        "rating": "B",
                        "created_at": "2025-09-10T15:46:50.000000Z",
                        "updated_at": "2025-09-12T11:31:11.000000Z"
                    }
                }
            ],
            "schedule_preferences": [
                {
                    "id": 1,
                    "emp_info_id": 2,
                    "preference_id": 2,
                    "maximum_hours": 8,
                    "employment_type": "FT",
                    "created_at": "2025-09-10T16:20:49.000000Z",
                    "updated_at": "2025-09-10T16:20:49.000000Z"
                }
            ],
            "employment_info": {
                "id": 2,
                "emp_info_id": 2,
                "position_id": 4,
                "paychex_ids": [
                    "8"
                ],
                "employment_type": "1099",
                "hired_date": "2024-08-08T00:00:00.000000Z",
                "base_pay": "90.00",
                "performance_pay": "28.00",
                "has_uniform": true,
                "created_at": "2025-09-10T16:37:45.000000Z",
                "updated_at": "2025-09-10T16:37:45.000000Z"
            }
        },
        {
            "id": 3,
            "store_id": "STORE_X46",
            "full_name": "ATse",
            "date_of_birth": "2014-08-08T00:00:00.000000Z",
            "has_family": true,
            "has_car": true,
            "is_arabic_team": true,
            "notes": "nothing",
            "status": "Terminated",
            "created_at": "2025-09-10T17:12:11.000000Z",
            "updated_at": "2025-09-10T17:12:11.000000Z",
            "store": {
                "id": "STORE_X46",
                "name": "AT",
                "number": "46",
                "created_at": "2025-09-10T15:11:44.000000Z",
                "updated_at": "2025-09-10T15:11:44.000000Z"
            },
            "skills": [
                {
                    "id": 2,
                    "name": "AT",
                    "slug": "test",
                    "created_at": "2025-09-10T15:35:57.000000Z",
                    "updated_at": "2025-09-10T15:35:57.000000Z",
                    "pivot": {
                        "emp_info_id": 3,
                        "skill_id": 2,
                        "rating": "A",
                        "created_at": "2025-09-10T17:12:23.000000Z",
                        "updated_at": "2025-09-10T17:12:23.000000Z"
                    }
                }
            ],
            "schedule_preferences": [],
            "employment_info": null
        },
        {
            "id": 4,
            "store_id": "STORE_X46",
            "full_name": "AT",
            "date_of_birth": "2014-08-08T00:00:00.000000Z",
            "has_family": true,
            "has_car": true,
            "is_arabic_team": true,
            "notes": "nothing",
            "status": "Terminated",
            "created_at": "2025-09-12T11:15:45.000000Z",
            "updated_at": "2025-09-12T11:20:36.000000Z",
            "store": {
                "id": "STORE_X46",
                "name": "AT",
                "number": "46",
                "created_at": "2025-09-10T15:11:44.000000Z",
                "updated_at": "2025-09-10T15:11:44.000000Z"
            },
            "skills": [
                {
                    "id": 2,
                    "name": "AT",
                    "slug": "test",
                    "created_at": "2025-09-10T15:35:57.000000Z",
                    "updated_at": "2025-09-10T15:35:57.000000Z",
                    "pivot": {
                        "emp_info_id": 4,
                        "skill_id": 2,
                        "rating": "A",
                        "created_at": "2025-09-12T11:25:16.000000Z",
                        "updated_at": "2025-09-12T11:25:16.000000Z"
                    }
                }
            ],
            "schedule_preferences": [],
            "employment_info": null
        }
    ],
    "first_page_url": "http://127.0.0.1:8000/api/stores/STORE_X46/employees?page=1",
    "from": 1,
    "last_page": 1,
    "last_page_url": "http://127.0.0.1:8000/api/stores/STORE_X46/employees?page=1",
    "links": [
        {
            "url": null,
            "label": "&laquo; Previous",
            "page": null,
            "active": false
        },
        {
            "url": "http://127.0.0.1:8000/api/stores/STORE_X46/employees?page=1",
            "label": "1",
            "page": 1,
            "active": true
        },
        {
            "url": null,
            "label": "Next &raquo;",
            "page": null,
            "active": false
        }
    ],
    "next_page_url": null,
    "path": "http://127.0.0.1:8000/api/stores/STORE_X46/employees",
    "per_page": 15,
    "prev_page_url": null,
    "to": 3,
    "total": 3
}"